@{
    ViewData["Title"] = "Agendar Turno";
    Layout = "_UserLayout";

    var ids = Context.Request.Query["ids"].ToList();

    var catalogoServicios = new List<(int Id, string Nombre, int Tiempo, decimal Costo)>
    {
        (1, "Cambio de aceite", 30, 2500),
        (2, "Alineación y balanceo", 45, 4000),
        (3, "Chequeo general", 60, 3500),
        (4, "Cambio de pastillas de freno", 40, 3200)
    };

    var serviciosSeleccionados = catalogoServicios
        .Where(s => ids.Contains(s.Id.ToString()))
        .ToList();

    var tiempoTotal = serviciosSeleccionados.Sum(s => s.Tiempo);
    var costoTotal = serviciosSeleccionados.Sum(s => s.Costo);

    var hoy = DateTime.Today.ToString("yyyy-MM-dd");

    // Fechas bloqueadas hardcodeadas
    var fechasBloqueadas = new List<string> {
        DateTime.Today.AddDays(1).ToString("yyyy-MM-dd"),
        DateTime.Today.AddDays(3).ToString("yyyy-MM-dd")
    };

    var horariosBloqueados = new List<string> {
        "10:00", "13:15", "16:45"
    };
}

<div class="row">
    <span> Daniel Vinet </span>
    <div class="col-md-12">
        <h2 class="mb-4">Agendar Turno</h2>

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-info">@TempData["Message"]</div>
        }
        else
        {
            <div class="card">
                <div class="card-body">
                    <ul class="list-group mb-3">
                        @foreach (var servicio in serviciosSeleccionados)
                        {
                            <li class="list-group-item d-flex justify-content-between">
                                <span>@servicio.Nombre</span>
                                <span>
                                    <span class="me-4"><i class="bi bi-clock"></i> @servicio.Tiempo min</span>
                                    <strong>$@servicio.Costo</strong>
                                </span>
                            </li>
                        }
                        <li class="list-group-item d-flex justify-content-between bg-light">
                            <span><strong>Total</strong></span>
                            <span>
                                <span class="me-4"><i class="bi bi-clock-history"></i> @tiempoTotal min</span>
                                <strong>$@costoTotal</strong>
                            </span>
                        </li>
                    </ul>

                    <form method="post" asp-controller="Usuarios" asp-action="ConfirmAppointment">
                        <div class="row mb-3">
                            <div class="col-md-6 mb-3 mb-md-0">
                                <label for="fechaTurno" class="form-label">Seleccionar día</label>
                                <input type="date" class="form-control" id="fechaTurno" name="fechaTurno" min="@hoy" required />
                            </div>
                            <div class="col-md-6">
                                <label for="horaTurno" class="form-label">Seleccionar hora</label>
                                <input type="time" class="form-control" id="horaTurno" name="horaTurno" step="900" required />
                            </div>
                        </div>

                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-circle"></i> Confirmar Turno
                        </button>
                    </form>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        const fechasBloqueadas = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(fechasBloqueadas));
        const horariosBloqueados = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(horariosBloqueados));

        const fechaInput = document.getElementById("fechaTurno");
        const horaInput = document.getElementById("horaTurno");

        // Bloquear fechas
        fechaInput.addEventListener("input", function () {
            const seleccionada = this.value;
            if (fechasBloqueadas.includes(seleccionada)) {
                alert("La fecha seleccionada no está disponible. Por favor, elige otra.");
                this.value = "";
            }
        });

        // Validar hora: debe ser múltiplo de 15 y no estar bloqueada
        horaInput.addEventListener("input", function () {
            const hora = this.value;
            const [h, m] = hora.split(":").map(Number);

            if (![0, 15, 30, 45].includes(m)) {
                alert("Solo se permiten horarios cada 15 minutos.");
                this.value = "";
                return;
            }

            if (horariosBloqueados.includes(hora)) {
                alert("Ese horario no está disponible.");
                this.value = "";
            }
        });
    </script>
}
