// <auto-generated />
using System;
using AvanzadaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvanzadaAPI.Migrations
{
    [DbContext(typeof(AvanzadaContext))]
    [Migration("20250827202142_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvanzadaAPI.Models.Cliente", b =>
                {
                    b.Property<int>("IDCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCliente"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Localidad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDCliente");

                    b.HasIndex("IDUsuario")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.EstadoTurno", b =>
                {
                    b.Property<int>("IDEstadoTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDEstadoTurno"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDEstadoTurno");

                    b.ToTable("EstadosTurno");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.NivelUsuario", b =>
                {
                    b.Property<int>("IDNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDNivel"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDNivel");

                    b.ToTable("NivelesUsuario");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Servicio", b =>
                {
                    b.Property<int>("IDServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDServicio"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("TiempoEstimado")
                        .HasColumnType("int");

                    b.HasKey("IDServicio");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.TipoCombustible", b =>
                {
                    b.Property<int>("IDCombustible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCombustible"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDCombustible");

                    b.ToTable("TiposCombustible");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Turno", b =>
                {
                    b.Property<int>("IDTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDTurno"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDEstadoTurno")
                        .HasColumnType("int");

                    b.Property<int>("IDServicio")
                        .HasColumnType("int");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IDVehiculo")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDTurno");

                    b.HasIndex("IDEstadoTurno");

                    b.HasIndex("IDServicio");

                    b.HasIndex("IDUsuario");

                    b.HasIndex("IDVehiculo");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Contraseña")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IDNivel")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDUsuario");

                    b.HasIndex("IDNivel");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Vehiculo", b =>
                {
                    b.Property<int>("IDVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDVehiculo"));

                    b.Property<int>("IDCombustible")
                        .HasColumnType("int");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("IDVehiculo");

                    b.HasIndex("IDCombustible");

                    b.HasIndex("IDUsuario");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Cliente", b =>
                {
                    b.HasOne("AvanzadaAPI.Models.Usuario", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("AvanzadaAPI.Models.Cliente", "IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Turno", b =>
                {
                    b.HasOne("AvanzadaAPI.Models.EstadoTurno", "EstadoTurno")
                        .WithMany("Turnos")
                        .HasForeignKey("IDEstadoTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvanzadaAPI.Models.Servicio", "Servicio")
                        .WithMany("Turnos")
                        .HasForeignKey("IDServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvanzadaAPI.Models.Usuario", "Usuario")
                        .WithMany("Turnos")
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvanzadaAPI.Models.Vehiculo", "Vehiculo")
                        .WithMany("Turnos")
                        .HasForeignKey("IDVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoTurno");

                    b.Navigation("Servicio");

                    b.Navigation("Usuario");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Usuario", b =>
                {
                    b.HasOne("AvanzadaAPI.Models.NivelUsuario", "NivelUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IDNivel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NivelUsuario");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Vehiculo", b =>
                {
                    b.HasOne("AvanzadaAPI.Models.TipoCombustible", "TipoCombustible")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IDCombustible")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvanzadaAPI.Models.Usuario", "Usuario")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCombustible");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.EstadoTurno", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.NivelUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Servicio", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.TipoCombustible", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Usuario", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Turnos");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("AvanzadaAPI.Models.Vehiculo", b =>
                {
                    b.Navigation("Turnos");
                });
#pragma warning restore 612, 618
        }
    }
}
